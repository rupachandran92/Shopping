{"ast":null,"code":"var _jsxFileName = \"/Users/rupa/Desktop/Shopping/src/context.js\";\nimport React, { Component } from 'react';\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext();\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempProducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = { ...item\n        };\n        tempProducts = [...tempProducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempProducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempProducts = [...this.state.products];\n      const index = tempProducts.indexOf(this.getItem(id));\n      const product = tempProducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempProducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count + 1;\n      product.total = product.count * product.price;\n      this.setState(() => {\n        return {\n          cart: [...tempCart]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.decrement = id => {\n      let tempCart = [...this.state.cart];\n      const selectedProduct = tempCart.find(item => item.id === id);\n      const index = tempCart.indexOf(selectedProduct);\n      const product = tempCart[index];\n      product.count = product.count - 1;\n\n      if (product.count === 0) {\n        this.removeItem(id);\n      } else {\n        product.total = product.count * product.price;\n        this.setState(() => {\n          return {\n            cart: [...tempCart]\n          };\n        }, () => {\n          this.addTotals();\n        });\n      }\n    };\n\n    this.removeItem = id => {\n      let tempProducts = [...this.state.products];\n      let tempCart = [...this.state.cart];\n      tempCart = tempCart.filter(item => item.id !== id);\n      const index = tempProducts.indexOf(this.getItem(id));\n      let removeProduct = tempProducts[index];\n      removeProduct.inCart = false;\n      removeProduct.count = 0;\n      removeProduct.total = 0;\n      this.setState(() => {\n        return {\n          cart: [...tempCart],\n          products: [...tempProducts]\n        };\n      }, () => {\n        this.addTotals();\n      });\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      }, () => {\n        this.setProducts();\n        this.addTotals();\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n      value: { ...this.state,\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/Users/rupa/Desktop/Shopping/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempProducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","tempCart","selectedProduct","decrement","removeItem","filter","removeProduct","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport {storeProducts, detailProduct} from './data';\n\nconst ProductContext = React.createContext();\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct:detailProduct,\n        cart: [],\n        modalOpen: false,\n        modalProduct: detailProduct,\n        cartSubTotal: 0,\n        cartTax: 0,\n        cartTotal: 0\n    }\n\n    componentDidMount() {\n        this.setProducts();\n    }\n\n    setProducts = () => {\n        let tempProducts = [];\n        storeProducts.forEach(item => {\n            const singleItem = {...item};\n            tempProducts = [...tempProducts, singleItem];\n        });\n\n        this.setState(()=>{\n            return {products:tempProducts}\n        });\n    }\n\n    getItem = (id) => {\n        const product= this.state.products.find(item => item.id===id);\n        return product;\n    }\n\n    handleDetail= (id) => {\n        const product = this.getItem(id);\n        this.setState(()=> {\n            return {detailProduct:product}\n        })\n    }\n\n    addToCart= (id)=> {\n        let tempProducts = [...this.state.products];\n        const index = tempProducts.indexOf(this.getItem(id));\n        const product = tempProducts[index];\n        product.inCart = true;\n        product.count = 1;\n        const price = product.price;\n        product.total = price;\n        this.setState(()=>{\n            return {products:tempProducts, cart: [...this.state.cart, product]}\n        }, ()=> {\n            this.addTotals();\n        });\n    }\n    openModal = id => {\n        const product = this.getItem(id);\n        this.setState(()=> {\n            return {modalProduct: product, modalOpen:true}\n        })\n    }\n\n    closeModal = () => {\n        this.setState(()=> {\n            return {modalOpen:false}\n        })\n    }\n\n    increment = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item=>item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n        \n        product.count = product.count + 1;\n        product.total = product.count * product.price;\n\n        this.setState(()=> {\n            return { cart:[...tempCart]}\n        }, ()=> {\n            this.addTotals();\n        })\n    }\n\n    decrement = (id) => {\n        let tempCart = [...this.state.cart];\n        const selectedProduct = tempCart.find(item=>item.id === id);\n        const index = tempCart.indexOf(selectedProduct);\n        const product = tempCart[index];\n       \n        product.count = product.count - 1;\n        if(product.count === 0) {\n            this.removeItem(id);\n        }\n        else {\n            product.total = product.count * product.price;\n            this.setState(()=> {\n                return { cart:[...tempCart]}\n            }, ()=> {\n                this.addTotals();\n            })\n        }\n    }\n\n    removeItem = (id) => {\n       let tempProducts = [...this.state.products];\n       let tempCart = [...this.state.cart];\n\n       tempCart = tempCart.filter(item => item.id !== id);\n\n       const index = tempProducts.indexOf(this.getItem(id));\n       let removeProduct = tempProducts[index];\n       removeProduct.inCart = false;\n       removeProduct.count = 0;\n       removeProduct.total = 0;\n\n       this.setState(()=> {\n           return {\n               cart: [...tempCart],\n               products: [...tempProducts]\n           }\n       }, () => {\n           this.addTotals();\n       })\n    }\n\n    clearCart = () => {\n        this.setState(()=> {\n            return {cart:[]}\n        }, ()=> {\n            this.setProducts();\n            this.addTotals();\n        });\n    }\n\n    addTotals = () => {\n        let subTotal = 0;\n        this.state.cart.map(item => subTotal += item.total);\n        const tempTax = subTotal * 0.1;\n        const tax = parseFloat(tempTax.toFixed(2));\n        const total = subTotal + tax;\n        this.setState(()=> {\n            return {\n                cartSubTotal: subTotal,\n                cartTax: tax,\n                cartTotal: total\n            }\n        })\n    }\n\n    render() {\n        return (\n            <ProductContext.Provider value={{\n                ...this.state, \n                handleDetail:this.handleDetail, \n                addToCart:this.addToCart,\n                openModal: this.openModal,\n                closeModal: this.closeModal,\n                increment: this.increment,\n                decrement: this.decrement,\n                removeItem: this.removeItem,\n                clearCart: this.clearCart\n            }}>\n                {this.props.children}\n            </ProductContext.Provider>\n        )\n    }\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\nexport {ProductProvider, ProductConsumer};\n"]},"metadata":{},"sourceType":"module"}